<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="lt.rokas.uzd1.mybatis.dao.ExpensegroupMapper">
  <resultMap id="BaseResultMap" type="lt.rokas.uzd1.mybatis.model.Expensegroup">

    <id column="ID" jdbcType="INTEGER" property="id" />
    <result column="DATE" jdbcType="DATE" property="date" />
    <result column="DESCRIPTION" jdbcType="VARCHAR" property="description" />
    <result column="NAME" jdbcType="VARCHAR" property="name" />
    <result column="TOTAL_COST" jdbcType="DOUBLE" property="totalCost"/>
    <collection property="expenses" ofType="lt.rokas.uzd1.mybatis.model.Expense">
      <id property="id" column="EXPENSE_ID" />
      <result property="name" column="EXPENSE_NAME" />
      <result property="cost" column="COST" />
    </collection>
    <collection property="expenseGroupTags" ofType="lt.rokas.uzd1.mybatis.model.Expensegrouptag">
      <id property="id" column="TAG_ID" />
      <result property="name" column="TAG_NAME" />
    </collection>
  </resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">

    delete from PUBLIC.EXPENSEGROUP
    where ID = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" keyColumn="ID" keyProperty="id" parameterType="lt.rokas.uzd1.mybatis.model.Expensegroup" useGeneratedKeys="true">
    <selectKey order="AFTER" keyProperty="id" resultType="integer">
      SELECT scope_identity()
    </selectKey>
    insert into PUBLIC.EXPENSEGROUP (DATE, DESCRIPTION, NAME
      )
    values (#{date,jdbcType=DATE}, #{description,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}
      )
  </insert>

  <insert id="addGroupTag">
    insert into PUBLIC.EXPENSEGROUP_EXPENSEGROUPTAG
    (EXPENSEGROUPS_ID, EXPENSEGROUPTAGS_ID)
    values(#{group.id}, #{tag.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="lt.rokas.uzd1.mybatis.model.Expensegroup">

    update PUBLIC.EXPENSEGROUP
    set DATE = #{date,jdbcType=DATE},
      DESCRIPTION = #{description,jdbcType=VARCHAR},
      NAME = #{name,jdbcType=VARCHAR}
    where ID = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select
      PUBLIC.EXPENSEGROUP.ID, PUBLIC.EXPENSEGROUP.DATE, PUBLIC.EXPENSEGROUP.DESCRIPTION, PUBLIC.EXPENSEGROUP.NAME,
      PUBLIC.EXPENSE.NAME AS EXPENSE_NAME, PUBLIC.EXPENSE.COST, PUBLIC.EXPENSE.ID AS EXPENSE_ID,
      (SELECT SUM(e.COST) from EXPENSE e where e.EXPENSEGROUP_ID = #{id,jdbcType=INTEGER}) AS TOTAL_COST,
      PUBLIC.EXPENSEGROUPTAG.NAME AS TAG_NAME, PUBLIC.EXPENSEGROUPTAG.ID AS TAG_ID
    from PUBLIC.EXPENSEGROUP
           LEFT OUTER JOIN PUBLIC.EXPENSE
                           ON PUBLIC.EXPENSEGROUP.ID = PUBLIC.EXPENSE.EXPENSEGROUP_ID
           LEFT OUTER JOIN PUBLIC.EXPENSEGROUP_EXPENSEGROUPTAG as BRIDGE
                           ON PUBLIC.EXPENSEGROUP.ID = BRIDGE.EXPENSEGROUPS_ID
           LEFT OUTER JOIN PUBLIC.EXPENSEGROUPTAG
                           ON PUBLIC.EXPENSEGROUPTAG.ID = BRIDGE.EXPENSEGROUPTAGS_ID
    where PUBLIC.EXPENSEGROUP.ID = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select
      PUBLIC.EXPENSEGROUP.ID, PUBLIC.EXPENSEGROUP.DATE, PUBLIC.EXPENSEGROUP.DESCRIPTION, PUBLIC.EXPENSEGROUP.NAME,
      PUBLIC.EXPENSE.NAME AS EXPENSE_NAME, PUBLIC.EXPENSE.COST, PUBLIC.EXPENSE.ID AS EXPENSE_ID,
      (SELECT SUM(e.COST) from EXPENSE e where e.EXPENSEGROUP_ID = #{id,jdbcType=INTEGER}) AS TOTAL_COST,
      PUBLIC.EXPENSEGROUPTAG.NAME AS TAG_NAME, PUBLIC.EXPENSEGROUPTAG.ID AS TAG_ID
    from PUBLIC.EXPENSEGROUP
           LEFT OUTER JOIN PUBLIC.EXPENSE
                           ON PUBLIC.EXPENSEGROUP.ID = PUBLIC.EXPENSE.EXPENSEGROUP_ID
           LEFT OUTER JOIN PUBLIC.EXPENSEGROUP_EXPENSEGROUPTAG as BRIDGE
                           ON PUBLIC.EXPENSEGROUP.ID = BRIDGE.EXPENSEGROUPS_ID
           LEFT OUTER JOIN PUBLIC.EXPENSEGROUPTAG
                           ON PUBLIC.EXPENSEGROUPTAG.ID = BRIDGE.EXPENSEGROUPTAGS_ID
  </select>
</mapper>